extends ../_layout

block head
  style.
    .xd-colorbox {
      width: 64px;
      height: 64px;
      padding: 4px;
      font-size: 0.8rem;
      border: 1px solid rgba(0, 0, 0, 0.1);
      color: transparent;
    }
    .xd-colorbox:hover {
      color: rgba(0, 0, 0, 0.8);
    }
    .xd-colorbox.dark:hover {
      color: rgba(255, 255, 255, 0.8);
    }

block main
  h1 カラー
  p 色はウェブサイトに華をもたらします。多すぎるとうるさく感じますが、少なすぎると殺風景でつまらない見た目になるでしょう。
  p XelticaUI は定義済みの色を56色用意しており、すぐに使用できます。
  h2 カラーボックス
  p 定義済みの全ての色を確認できます。ホバーかクリックで、名前を確認できます。
  p.text-dimmed#colorbox-desc
  .vstack.dense
    .hstack.dense.wrap
      each tuple in grayscales
        - const [name, isDark] = tuple;
        .xd-colorbox.select-none.clickable(class=`bg-${name} ${isDark ? 'dark' : ''}`)= name

    .hstack.dense.wrap
      each tuple in colors
        - const [name, isDark] = tuple;
        .xd-colorbox.select-none.clickable(class=`bg-${name} ${isDark ? 'dark' : ''}`)= name

    .hstack.dense.wrap
      each tuple in colors
        - const [name] = tuple;
        .xd-colorbox.select-none.clickable(class=`bg-${name}-l`)= `${name}-l`

    .hstack.dense.wrap
      each tuple in colors
        - const [name] = tuple;
        .xd-colorbox.select-none.clickable(class=`bg-${name}-d dark`)= `${name}-d`
    .test

block append script
  script.
    const cb = navigator.clipboard;
    let shift = false;

    if (cb) {
      document.getElementById('colorbox-desc').innerHTML += '色をタップ/クリックすると、クリップボードに名前をコピーできます。<br />PCでは、シフトキーを押しながらクリックすると16進コードをコピーできます。';

      document.addEventListener('keydown', e => {
        if (e.key === 'Shift') shift = true;
      });
      document.addEventListener('keyup', e => {
        if (e.key === 'Shift') shift = false;
      });

      const colorBoxes = [...document.getElementsByClassName('xd-colorbox')];
      colorBoxes.forEach(el => {
        el.addEventListener('click', e => {
          const className = e.target.innerText;
          const value = getComputedStyle(document.body)
            .getPropertyValue('--' + className);
          console.log(shift ? value : className);
          cb.writeText(shift ? value : className);
        });
      });
    }
