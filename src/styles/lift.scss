@mixin liftUp($insetShadowColor: var(--lift-shadow)) {
  box-shadow:
    -2px -2px 4px var(--lift-light),
    2px 2px 4px var(--lift-shadow),
    2px 2px 4px var(--lift-light2) inset,
    -2px -2px 2px $insetShadowColor inset;
}

@mixin liftDown($insetShadowColor: var(--lift-shadow)) {
  box-shadow:
    2px 2px 8px var(--lift-shadow) inset,
    -2px -2px 8px var(--lift-light2) inset;
}

.lift {
  --clickable-active-transform: none;
  --clickable-hover-transform: none;
  transition: box-shadow 0.15s ease;
  background: var(--lift-bg);
  color: var(--lift-fg);
  @extend .rounded;
  &.up {
    @include liftUp();
  }
  &.down {
    @include liftDown();
  }
}

.btn.lift {
  @include liftUp();
  border: none;
  color: var(--lift-fg);
  &::before {
    transition: background 0.1s ease;
  }
  &:focus::before {
    box-shadow: none;
    background: var(--lift-hover);
  }

  &:not(.link):not(:disabled) {
    transition: box-shadow 0.2s ease;
    &:hover::before {
      background: var(--lift-hover);
    }

    &:active {
      filter: none;
      @include liftDown();
      &::before {
        background: var(--lift-active);
      }
    }
  }

  &:disabled {
    background: var(--lift-bg);
    color: var(--dimmed);
    box-shadow: none;
  }

  @each $var, $_ in $classes {
    &.#{$var} {
      background: var(--lift-bg) !important;
      color: var(--#{$var});
      &:focus::before {
        box-shadow: none !important;
      }
      &:disabled {
        background: var(--lift-bg) !important;
        color: var(--dimmed);
      }
    }
  }
}

:not(label).input-field.lift, label.input-field.lift > input {
  border: none;
  @include liftDown();
  &:disabled {
    box-shadow: none;
    background: none;
  }

  &[type="file"] {
    @include liftDown();
    @extend .pa-1;

    &:not(:disabled) {
      &:active {
        filter: none;
      }
    }

    &:disabled {
      background: var(--lift-bg);
      &::file-selector-button,
      &::-webkit-file-upload-button {
        background: var(--lift-bg);
        border: none;
        color: var(--dimmed);
      }
    }

    &::file-selector-button,
    &::-webkit-file-upload-button {
      padding: var(--input-padding);
      border: none;
      border-radius: var(--radius);
      color: var(--primary);
      background: var(--lift-bg);
      @include liftUp();
      @extend .mr-1;
    }
  }

  &[type="color"] {
    @extend .pa-1;

    &:not(:disabled) {
      @include liftUp();
      &:active {
        filter: none;
      }
      &:active {
        @include liftDown();
      }
    }

    @mixin swatch {
      height: 1rem;
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      border-radius: var(--radius);
      border: none;
    }

    &::-moz-color-swatch {
      @include swatch();
    }

    &::-webkit-color-swatch {
      @include swatch();
    }
  }
}
